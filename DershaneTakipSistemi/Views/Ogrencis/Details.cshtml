@model DershaneTakipSistemi.Models.Ogrenci

@{
    ViewData["Title"] = "Öğrenci Detayları";
}

<h1>@ViewData["Title"]</h1>

<div>
    <h4>Öğrenci Bilgileri</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ad)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Ad)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Soyad)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Soyad)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TCKimlik)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TCKimlik)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Sinifi)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Sinifi.Ad)
            @* Null kontrolü: @(Model.Sinifi != null ? Model.Sinifi.Ad : "Sınıfa Atanmamış") *@
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DogumTarihi)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DogumTarihi)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CepTelefonu)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CepTelefonu)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.KayitTarihi)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.KayitTarihi)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Adres)
        </dt>
        <dd class="col-sm-10">
            @* Adres çok uzun olabileceği için preformatlayabiliriz *@
            <pre style="white-space: pre-wrap; font-family: inherit;">@Html.DisplayFor(model => model.Adres)</pre>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AktifMi)
        </dt>
        <dd class="col-sm-10">
            @(Model.AktifMi ? "Evet" : "Hayır")
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Notlar)
        </dt>
        <dd class="col-sm-10">
            <pre style="white-space: pre-wrap; font-family: inherit;">@Html.DisplayFor(model => model.Notlar)</pre>
        </dd>
    </dl>
</div>

@* Mevcut Ödeme Listesi Kodu Buradaydı, aynı kalmalı *@
<hr />
<h4>Öğrencinin Ödemeleri</h4>
@if (Model.Odemeler != null && Model.Odemeler.Any())
{
    <table class="table table-striped table-sm mt-3">
        <thead>
            <tr>
                <th>Ödeme Tarihi</th>
                <th>Tutar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var odeme in Model.Odemeler.OrderByDescending(o => o.OdemeTarihi))
            {
                <tr>
                    <td>@odeme.OdemeTarihi.ToShortDateString()</td>
                    <td>@odeme.Tutar.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Bu öğrenciye ait kayıtlı ödeme bulunmamaktadır.</p>
}


<div class="mt-4">
    @* Butonlara üstten boşluk *@
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Düzenle</a> |
    <a asp-action="Index" class="btn btn-secondary">Listeye Geri Dön</a>
</div>